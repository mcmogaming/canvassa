server {
        listen 80;
        listen [::]:80;

        root /var/www/html;
        index index.html index.htm index.nginx-debian.html;

        server_name _;

        location /backend {
                proxy_pass http://backend:5000;
        }

        location / {
                proxy_pass http://frontend:3000;
        }

        location ~ /.well-known/acme-challenge {
                allow all;
                root /var/www/html;
        }
}

# server {
#         listen 443 ssl http2;
#         listen [::]:443 ssl http2;
#         server_name example.com www.example.com;

#         server_tokens off;

#         ssl_certificate /etc/certs/server-cert.crt;
#         ssl_certificate_key /etc/certs/server-cert.key;

#         ssl_on;
#         ssl_session_cache builtin:1000 shared:SSL:10m;
#         ssl_protocols TLSv1.3;
#         ssl_ciphers "HIGH !aNULL !eNULL !EXPORT !CAMELLIA !DES !MD5 !PSK !RC4";
#         ssl_prefer_server_ciphers on;

#         location / {
#                 try_files $uri @nodejs;
#         }

#         location @nodejs {
#                 proxy_pass http://nodejs:8080;
#                 add_header X-Frame-Options "SAMEORIGIN" always;
#                 add_header X-XSS-Protection "1; mode=block" always;
#                 add_header X-Content-Type-Options "nosniff" always;
#                 add_header Referrer-Policy "no-referrer-when-downgrade" always;
#                 add_header Content-Security-Policy "default-src * data: 'unsafe-eval' 'unsafe-inline'" always;
#                 # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
#                 # enable strict transport security only if you understand the implications
#         }

#         root /var/www/html;
#         index index.html index.htm index.nginx-debian.html;
# }